scale_x_continuous(breaks = seq(0, 1, 0.1))
ggplot(aes(x = popularity), data = df) +
geom_histogram(binwidth = 5) +
scale_x_continuous(breaks = seq(0, 100, 10))
key.distinct <- data.frame(key=c('C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'))
key.distinct$count <- table(df$key)
ggplot(key.distinct, aes(x = key, y = count)) +
geom_col()
date.added <- data.frame(df$added_at, rep(1, times = nrow(df)))
names(date.added) <- c("date", "count")
date.added <-
aggregate(date.added$count, by=list(date.added$date), sum)
names(date.added) <- c("date", "count")
ggplot(date.added, aes(x = date, y = count)) +
geom_point(alpha = 0.4,
position = position_jitter(h = 0),
color = 'blue')
date.added <- date.added %>%
mutate(month_year = format(date.added$date, "%Y-%m"),
month_name = format(date.added$date, "%b"))
date.added.month <- aggregate(date.added$count, by=list(date.added$month_year), sum)
names(date.added.month) <- c('month_year', 'count')
date.added.month
ggplot(date.added.month, aes(x = month_year, y = count)) +
geom_line(aes(group = 1), color = 'blue') +
geom_point(color = 'blue',
alpha = 0.7)
date.added.month[order(-date.added.month$count, date.added.month$month_year),]
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
names(date.added.month.name) <- c('month_name', 'count')
months <- c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
ggplot(aes(x = popularity, y = danceability), data = df) +
coord_cartesian(ylim = c(0, 1), xlim = c(0, 100)) +
geom_point(color = 'blue')
ggplot(aes(x = danceability, y = tempo), data = df) +
coord_cartesian(ylim = c(50, 210), xlim = c(0, 1.0)) +
geom_point(color = 'orange')
ggplot(aes(x = energy, y = loudness), data = df) +
coord_cartesian(xlim = c(0, 1.0)) +
geom_point(color = 'orange')
with(df, cor.test(energy, loudness))
df.keys = df[c('instrumentalness','key')]
df.keys$key = as.factor(df.keys$key)
df.keys
ggplot(aes(x = instrumentalness, y = key), data = df) +
coord_cartesian(ylim = c(0, 12), xlim = c(0, 1.0)) +
geom_point(alpha = 0.1,
position = position_jitter(h = 0),
color = 'blue')
danceability <- df[c('instrumentalness', 'danceability', 'energy', 'tempo', 'loudness')]
ggplot(danceability) +
geom_point(aes(x = danceability, y = loudness, size = tempo, color = energy),
alpha = 0.65,
position = position_jitter(h = 2))
columns = c('instrumentalness', 'popularity', 'energy', 'danceability', 'acousticness', 'speechiness', 'valence')
means <- df %>%
select('instrumentalness', 'popularity', 'energy', 'danceability', 'acousticness', 'speechiness', 'valence') %>%
group_by() %>%
summarise(speechiness = mean(speechiness),
acousticness = mean(acousticness),
popularity = mean(popularity)/100.0,
valence = mean(valence),
instrumentalness = mean(instrumentalness),
energy = mean(energy),
danceability = mean(danceability))
ggplot(gather(means), aes(x = key, y = value)) +
geom_col(fill = 'SkyBlue')
selected.features = c("added_at", "popularity", "acousticness", "danceability", "energy", "instrumentalness", "speechiness", "valence")
date.features <- df[selected.features]
date.features <- aggregate(date.features[selected.features], by=list(date.features$added_at), mean)
names(date.features) <- c("day", "added_at", "popularity", "acousticness", "danceability", "energy", "instrumentalness", "speechiness", "valence")
#names(date.added) <- c("date", "count")
date.features <- date.features %>%
mutate(month_year = format(date.features$day, "%Y-%m"),
month_name = format(date.features$day, "%b"))
date.features.month <- aggregate(date.features[selected.features], by=list(date.added$month_year), mean)
date.features.month$popularity <- date.features.month$popularity/100
date.features.month <- select(date.features.month, -c('added_at'))
date.features.month.reshape <- melt(date.features.month)
names(date.features.month.reshape) <- c('date', 'feature', 'value')
dates.features.month.reshape <- date.features.month.reshape[with(date.features.month.reshape, order(date, feature)), ]
ggplot(aes(date), data = date.features.month.reshape) +
geom_point(aes(y = value, color = feature))
ggplot(aes(feature), data = date.features.month.reshape) +
geom_tile(aes(y = date, fill = value))
xDensity <- ggplot(aes(x = popularity), data = df) +
geom_density(color = 'blue', fill = 'blue') +
scale_fill_manual(values = df$popularity) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
legend.position="none",
panel.background=element_blank(),
plot.background=element_blank())
#
yDensity <- ggplot(aes(x = danceability), data = df) +
geom_density(color = 'blue', fill = 'blue') +
scale_fill_manual(values = df$danceability) +
coord_flip() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
scatter <- ggplot(aes(x = popularity, y = danceability), data = df) +
coord_cartesian(ylim = c(0, 1), xlim = c(0, 100)) +
geom_point(alpha = 0.2,
position = position_jitter(h = 0),
color = 'blue')
blankPlot <- ggplot() + geom_blank() + theme_void()
grid.arrange(xDensity, blankPlot, scatter, yDensity, ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
ggplot(aes(x = energy, y = loudness), data = df) +
coord_cartesian(xlim = c(0, 1.0)) +
geom_point(aes(color = danceability),
alpha = 0.8,
position = position_jitter(h = 0.5)) +
geom_smooth(method = 'lm', span=0.3, color = 'black')
ggplot(aes(feature), data = date.features.month.reshape) +
geom_raster(aes(y = date, fill = value), interpolate = TRUE)
# type conversion from char to Date
df <- df %>%
mutate(added_at = as.Date(df$added_at))
first_date <- min(df$added_at)
last_date <- max(df$added_at)
as.numeric(last_date - first_date)/365
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
names(date.added.month.name) <- c('month_name', 'count')
months <- c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
# create columns for name of the month and name and year
date.added <- date.added %>%
mutate(month_year = format(date.added$date, "%Y-%m"),
month_name = format(date.added$date, "%b"))
# aggregate daily counts into monthly counts
date.added.month <- aggregate(date.added$count, by=list(date.added$month_year), sum)
# properly rename them
names(date.added.month) <- c('month_year', 'count')
# and plot'em
ggplot(date.added.month, aes(x = month_year, y = count)) +
geom_line(aes(group = 1), color = 'blue') +
geom_point(color = 'blue',
alpha = 0.7)
date.added.month[order(-date.added.month$count, date.added.month$month_year),]
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
names(date.added.month.name) <- c('month_name', 'count')
months <- c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
library(ggplot2)
library(gridExtra)
library(ggExtra)
library(dplyr)
library(fmsb)
library(tidyr)
library(reshape2)
# knitr: Suppress code/messages/warnings
#        Set default plot options and center them
knitr::opts_chunk$set(fig.width=9,fig.height=5,fig.path='Figs/',
fig.align='center',tidy=TRUE,
echo=FALSE,warning=FALSE,message=FALSE)
options(scipen = 999)
df <- read.csv('saved_songs.csv')
# we omit NA rows
df <- na.omit(df)
# and check if there is any
any(is.na(df))
names(df)
# get a list of all distinct artists and its frequency
artists <- as.data.frame(table(df$artist_name))
attach(artists)
# and order it by its frequency, descending (hence the minus)
artists <- artists[order(-Freq),]
artists
ggplot(aes(x = Freq), data = artists) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = seq(0, 20, 1))
# relative percentage is simply the frequency count by the total number of distinct artists
artists$relative_percentage <- artists$Freq/nrow(artists)
# then we aggregate it by the frequency, summing the percentage by its frequency
# meaning we now have the percentage of artist that has at least 1, 2, .. n songs
artists.rel <- aggregate(artists$relative_percentage, by=list(Freq=artists$Freq), FUN=sum)
artists.rel
# type conversion from char to Date
df <- df %>%
mutate(added_at = as.Date(df$added_at))
first_date <- min(df$added_at)
last_date <- max(df$added_at)
# calculate the delta between the first and last song added to the library
as.numeric(last_date - first_date)/365
track.features.names = c('danceability', 'energy', 'speechiness', 'instrumentalness', 'popularity', 'acousticness')
summary(df[track.features.names])
ggplot(aes(x = danceability), data = df) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 1, 0.1))
ggplot(aes(x = energy), data = df) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 1, 0.1))
ggplot(aes(x = speechiness), data = df) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 0.6, 0.05))
ggplot(aes(x = instrumentalness), data = df) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 1, 0.1))
ggplot(aes(x = acousticness), data = df) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 1, 0.1))
ggplot(aes(x = popularity), data = df) +
geom_histogram(binwidth = 5) +
scale_x_continuous(breaks = seq(0, 100, 10))
# define distinct types of Keys
key.distinct <- data.frame(key=c('C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'))
# generate a frequency table for each Key
key.distinct$count <- table(df$key)
# then we plot it
ggplot(key.distinct, aes(x = key, y = count)) +
geom_col()
# create a dataframe copying 'added_at' column and creating a column that has '1' for every row
date.added <- data.frame(df$added_at, rep(1, times = nrow(df)))
# properly name them
names(date.added) <- c("date", "count")
# aggregate by day
date.added <-
aggregate(date.added$count, by=list(date.added$date), sum)
names(date.added) <- c("date", "count")
ggplot(date.added, aes(x = date, y = count)) +
geom_point(alpha = 0.4,
position = position_jitter(h = 0),
color = 'blue')
# create columns for name of the month and name and year
date.added <- date.added %>%
mutate(month_year = format(date.added$date, "%Y-%m"),
month_name = format(date.added$date, "%b"))
# aggregate daily counts into monthly counts
date.added.month <- aggregate(date.added$count, by=list(date.added$month_year), sum)
# properly rename them
names(date.added.month) <- c('month_year', 'count')
# and plot'em
ggplot(date.added.month, aes(x = month_year, y = count)) +
geom_line(aes(group = 1), color = 'blue') +
geom_point(color = 'blue',
alpha = 0.7)
date.added.month[order(-date.added.month$count, date.added.month$month_year),]
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
names(date.added.month.name) <- c('month_name', 'count')
months <- c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
ggplot(aes(x = popularity, y = danceability), data = df) +
coord_cartesian(ylim = c(0, 1), xlim = c(0, 100)) +
geom_point(color = 'blue')
ggplot(aes(x = danceability, y = tempo), data = df) +
coord_cartesian(ylim = c(50, 210), xlim = c(0, 1.0)) +
geom_point(color = 'orange')
ggplot(aes(x = energy, y = loudness), data = df) +
coord_cartesian(xlim = c(0, 1.0)) +
geom_point(color = 'orange')
with(df, cor.test(energy, loudness))
df.keys = df[c('instrumentalness','key')]
df.keys$key = as.factor(df.keys$key)
df.keys
ggplot(aes(x = instrumentalness, y = key), data = df) +
coord_cartesian(ylim = c(0, 12), xlim = c(0, 1.0)) +
geom_point(alpha = 0.1,
position = position_jitter(h = 0),
color = 'blue')
danceability <- df[c('instrumentalness', 'danceability', 'energy', 'tempo', 'loudness')]
ggplot(danceability) +
geom_point(aes(x = danceability, y = loudness, size = tempo, color = energy),
alpha = 0.65,
position = position_jitter(h = 2))
columns = c('instrumentalness', 'popularity', 'energy', 'danceability', 'acousticness', 'speechiness', 'valence')
means <- df %>%
select('instrumentalness', 'popularity', 'energy', 'danceability', 'acousticness', 'speechiness', 'valence') %>%
group_by() %>%
summarise(speechiness = mean(speechiness),
acousticness = mean(acousticness),
popularity = mean(popularity)/100.0,
valence = mean(valence),
instrumentalness = mean(instrumentalness),
energy = mean(energy),
danceability = mean(danceability))
ggplot(gather(means), aes(x = key, y = value)) +
geom_col(fill = 'SkyBlue')
selected.features = c("added_at", "popularity", "acousticness", "danceability", "energy", "instrumentalness", "speechiness", "valence")
date.features <- df[selected.features]
date.features <- aggregate(date.features[selected.features], by=list(date.features$added_at), mean)
names(date.features) <- c("day", "added_at", "popularity", "acousticness", "danceability", "energy", "instrumentalness", "speechiness", "valence")
#names(date.added) <- c("date", "count")
date.features <- date.features %>%
mutate(month_year = format(date.features$day, "%Y-%m"),
month_name = format(date.features$day, "%b"))
date.features.month <- aggregate(date.features[selected.features], by=list(date.added$month_year), mean)
date.features.month$popularity <- date.features.month$popularity/100
date.features.month <- select(date.features.month, -c('added_at'))
date.features.month.reshape <- melt(date.features.month)
names(date.features.month.reshape) <- c('date', 'feature', 'value')
dates.features.month.reshape <- date.features.month.reshape[with(date.features.month.reshape, order(date, feature)), ]
ggplot(aes(date), data = date.features.month.reshape) +
geom_point(aes(y = value, color = feature))
ggplot(aes(feature), data = date.features.month.reshape) +
geom_tile(aes(y = date, fill = value))
xDensity <- ggplot(aes(x = popularity), data = df) +
geom_density(color = 'blue', fill = 'blue') +
scale_fill_manual(values = df$popularity) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
legend.position="none",
panel.background=element_blank(),
plot.background=element_blank())
#
yDensity <- ggplot(aes(x = danceability), data = df) +
geom_density(color = 'blue', fill = 'blue') +
scale_fill_manual(values = df$danceability) +
coord_flip() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
scatter <- ggplot(aes(x = popularity, y = danceability), data = df) +
coord_cartesian(ylim = c(0, 1), xlim = c(0, 100)) +
geom_point(alpha = 0.2,
position = position_jitter(h = 0),
color = 'blue')
blankPlot <- ggplot() + geom_blank() + theme_void()
grid.arrange(xDensity, blankPlot, scatter, yDensity, ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
ggplot(aes(x = energy, y = loudness), data = df) +
coord_cartesian(xlim = c(0, 1.0)) +
geom_point(aes(color = danceability),
alpha = 0.8,
position = position_jitter(h = 0.5)) +
geom_smooth(method = 'lm', span=0.3, color = 'black')
ggplot(aes(feature), data = date.features.month.reshape) +
geom_raster(aes(y = date, fill = value), interpolate = TRUE)
ggplot(date.added.month.name) +
geom_point(aes(x = month_name, y = count), color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
names(date.added.month.name) <- c('month_name', 'count')
months <- c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
names(date.added.month.name) <- c('month_name', 'count')
months <- c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
date.added.month.name
# aggregate by month name
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
# group by month name
names(date.added.month.name) <- c('month_name', 'count')
months <- c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
# order by month name given the right order list
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
# and plot'em
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
# aggregate by month name
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
# group by month name
names(date.added.month.name) <- c('month_name', 'count')
months <- c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
# order by month name given the right order list
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
# and plot'em
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue')
# and plot'em
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5)
# aggregate by month name
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
# group by month name
names(date.added.month.name) <- c('month_name', 'count')
months = c('Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez')
# order by month name given the right order list
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
# and plot'em
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits=months)
months
# aggregate by month name
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
# group by month name
names(date.added.month.name) <- c('month_name', 'count')
months = c('jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez')
# order by month name given the right order list
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
# and plot'em
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits = months)
months
# aggregate by month name
date.added.month.name <- aggregate(date.added$count, by=list(date.added$month_name), sum)
# group by month name
names(date.added.month.name) <- c('month_name', 'count')
months = c('jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez')
# order by month name given the right order list
date.added.month.name <- date.added.month.name[order(factor(date.added.month.name$month_name, levels = months)), ]
# and plot'em
ggplot(date.added.month.name, aes(x = month_name, y = count)) +
geom_point(color = 'blue') +
geom_path(group = 2, color = 'blue', alpha = 0.5) +
scale_x_discrete(limits = months)
# create columns for name of the month and name and year
date.added <- date.added %>%
mutate(month_year = format(date.added$date, "%Y-%m"),
month_name = format(date.added$date, "%b"))
# aggregate daily counts into monthly counts
date.added.month <- aggregate(date.added$count, by=list(date.added$month_year), sum)
# properly rename them
names(date.added.month) <- c('month_year', 'count')
# and plot'em
ggplot(date.added.month, aes(x = month_year, y = count)) +
geom_line(aes(group = 1), color = 'blue') +
geom_point(color = 'blue',
alpha = 0.7) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size=9))
danceability <- df[c('instrumentalness', 'danceability', 'energy', 'tempo', 'loudness')]
ggplot(danceability) +
geom_point(aes(x = danceability, y = loudness, color = energy),
alpha = 0.65,
position = position_jitter(h = 2)) +
scale_color_gradient2(midpoint = median(danceability$energy))
ggplot(aes(feature), data = date.features.month.reshape) +
geom_tile(aes(y = date, fill = value)) +
cale_fill_gradient2(midpoint = median(date.features.month.reshape$value),
high = 'red', low = 'blue')
ggplot(aes(feature), data = date.features.month.reshape) +
geom_tile(aes(y = date, fill = value)) +
cale_fill_gradient2(midpoint = median(date.features.month.reshape$value),
high = 'red', low = 'blue')
ggplot(aes(feature), data = date.features.month.reshape) +
geom_tile(aes(y = date, fill = value)) +
scale_fill_gradient2(midpoint = median(date.features.month.reshape$value),
high = 'red', low = 'blue')
# and check if there is any
any(is.na(df))
ggplot(aes(x = energy, y = loudness), data = df) +
coord_cartesian(xlim = c(0, 1.0)) +
geom_point(color = 'orange') +
labs(x = 'loudness (dB)')
ggplot(aes(x = energy, y = loudness), data = df) +
coord_cartesian(xlim = c(0, 1.0)) +
geom_point(color = 'orange') +
labs(y = 'loudness (dB)')
danceability <- df[c('instrumentalness', 'danceability', 'energy', 'tempo', 'loudness')]
ggplot(danceability) +
geom_point(aes(x = danceability, y = loudness, color = energy),
alpha = 0.65,
position = position_jitter(h = 2)) +
labs(y = 'loudness (dB)')
scale_color_gradient2(midpoint = median(danceability$energy))
# knitr: Suppress code/messages/warnings
#        Set default plot options and center them
knitr::opts_chunk$set(fig.width=9,fig.height=5,fig.path='Figs/',
fig.align='center',tidy=TRUE,
echo=FALSE,warning=FALSE,message=FALSE)
options(scipen = 999)
options(warn=0)
library(ggplot2)
library(gridExtra)
library(ggExtra)
library(dplyr)
library(fmsb)
library(tidyr)
library(reshape2)
